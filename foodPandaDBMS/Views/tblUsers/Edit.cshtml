@model foodPandaDBMS.Models.tblUser

@{
    ViewBag.Title = "Edit";
}

<!-- Bootstrap Icons CSS (make sure this is in your layout file's <head> section too) -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<h2 class="text-center my-4">Edit User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <div class="card shadow-lg rounded-lg">
            <div class="card-header text-white" style="background-color: #e74c3c;">
                <h3 class="mb-0">Edit User Information</h3>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserID)

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserNIC, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.UserNIC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserNIC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address_HouseNo, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Address_HouseNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address_HouseNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address_City, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Address_City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address_City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address_Status, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Address_Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address_Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address_PostalCode, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Address_PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address_PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group text-center mt-4">
                    <input type="submit" value="Save" class="btn btn-danger px-4" />
                </div>
            </div>
        </div>
    </div>
}

<div class="text-center mt-4">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary px-4 ml-2 hover-button" })
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<!-- Custom CSS for Styling -->
<style>
    .form-group label {
        color: #2c3e50;
        font-weight: bold;
    }

    .form-group input[type="submit"] {
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .btn-danger:hover {
        background-color: #e74c3c;
        color: white;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }

    .card-header {
        background-color: #e74c3c;
    }

    .card-body {
        background-color: #f9f9f9;
        border-radius: 10px;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ddd;
        padding: 0.75rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    h2 {
        font-size: 2rem;
        font-weight: bold;
        color: #2c3e50;
    }
</style>
